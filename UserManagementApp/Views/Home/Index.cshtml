@model List<UserManagementApp.ViewModels.DashboardViewModel>
@using Humanizer
@{
    ViewData["Title"] = "Home Page";
}
<form method="post">
    <div class="container table-wrapper">
        <div class="row mb-3">
            <div class="col-md-9 d-flex gap-2">
                <button type="submit" class="btn btn-primary" formaction="@Url.Action("BlockUsers", "Home")">Block</button>
                <button type="submit" class="btn btn-outline-primary" formaction="@Url.Action("UnBlockUsers", "Home")">Unblock</button>
                <button type="submit" class="btn btn-outline-danger" formaction="@Url.Action("DeleteUsers", "Home")"> Delete</button>
            </div>
            <div class="col-md-3 text-end">
                <input id="filterInput" type="text" class="form-control" placeholder="Filter by name or email">
            </div>
        </div>

        <table class="table table-bordered table-hover" id="userTable">
            <thead class="table-light">
                <tr>
                    <th scope="col"><input type="checkbox" id="selectAll"></th>
                    <th scope="col">Name</th>
                    <th scope="col">Email</th>
                    <th scope="col">Last seen</th>
                </tr>

            </thead>
            <tbody>
            @foreach (var user in Model)
            {
                    @if (user.IsBlocked==false)
                    {
                        <tr>
                            <td><input type="checkbox" name="userIds" value="@user.Email"></td>
                            <td><strong>@user.Name</strong><br><span class="text-muted">@user.Designation</span></td>
                            <td>@user.Email</td>
                            <td>
                                <span data-bs-toggle="tooltip" title="@user.LastLoginTIme.Value.ToString("f")">
                                    @user.LastLoginTIme.Value.Humanize()
                                </span>
                                <div class="last-seen-bar">
                                    <div class="bar active" style="height: 10px;"></div>
                                    <div class="bar active" style="height: 14px;"></div>
                                    <div class="bar active" style="height: 12px;"></div>
                                    <div class="bar" style="height: 6px;"></div>
                                    <div class="bar active" style="height: 14px;"></div>
                                    <div class="bar" style="height: 4px;"></div>
                                </div>
                            </td>
                        </tr>
                    }
                    else
                    {
                        <tr>
                            <td><input type="checkbox" name="userIds" value="@user.Email"></td>
                            <td><span class="text-muted-line">@user.Name</span><br><span class="text-muted">@user.Designation</span></td>
                            <td class="text-muted">@user.Email</td>
                            <td>
                                <span data-bs-toggle="tooltip" title="@user.LastLoginTIme.Value.ToString("f")">
                                    @user.LastLoginTIme.Value.Humanize()
                                </span>
                            </td>
                        </tr>
                    }
                    
            }
            </tbody>
        </table>
    </div>

</form>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js"></script>
    <script>
        const tooltipTriggerList = document.querySelectorAll('[data-bs-toggle="tooltip"]')
        const tooltipList = [...tooltipTriggerList].map(tooltipTriggerEl => new bootstrap.Tooltip(tooltipTriggerEl))

        const filterInput = document.getElementById("filterInput");
        const table = document.getElementById("userTable");
        const rows = table.getElementsByTagName("tr");

        filterInput.addEventListener("keyup", function () {
            const filter = this.value.toLowerCase();
            for (let i = 1; i < rows.length; i++) {
                const cells = rows[i].getElementsByTagName("td");
                const name = cells[1]?.innerText.toLowerCase();
                const email = cells[2]?.innerText.toLowerCase();
                if (name.includes(filter) || email.includes(filter)) {
                    rows[i].style.display = "";
                } else {
                    rows[i].style.display = "none";
                }
            }
        });
    // Select all checkboxes
    const selectAllCheckbox = document.getElementById("selectAll");
    selectAllCheckbox.addEventListener("change", function () {
        const checkboxes = document.querySelectorAll('input[name="userIds"]');
        checkboxes.forEach((checkbox) => {
            checkbox.checked = selectAllCheckbox.checked;
        });
    });
    </script>